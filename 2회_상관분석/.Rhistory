Data <- read.csv('C:/Users/ksn71/OneDrive/바탕 화면/2.Iris (1).csv')
colnames(Data)
sd(Data$Petal.Width)
sd(Data$Petal.Width)
Data <- read.csv('C:/Users/ksn71/OneDrive/바탕 화면/2.Iris (1).csv')
# 열 이름 보
colnames(Data)
#평균 구하기 각 열의
mean(Data$Sepal.Length)
mean(Data$Sepal.Width)
mean(Data$Petal.Length)
mean(Data$Petal.Width)
#분산 구하기 각 열의
var(Data$Sepal.Length)
var(Data$Sepal.Width)
var(Data$Petal.Length)
var(Data$Petal.Width)
# 표준편차 구하기 각 열
sd(Data$Sepal.Length)
sd(Data$Sepal.Width)
sd(Data$Petal.Length)
sd(Data$Petal.Width)
# 각 변수의 표준화
Data_standardized <- scale(Data)
Data <- read.csv('C:/Users/ksn71/OneDrive/바탕 화면/2.Iris (1).csv', fileEncoding = "UTF-8")
# 각 변수의 표준화
Data_standardized <- scale(Data)
#표준평균
mean(Data$Sepal.Length)
mean(Data$Sepal.Width)
mean(Data$Petal.Length)
mean(Data$Petal.Width)
#표준분산
var(Data$Sepal.Length)
var(Data$Sepal.Width)
var(Data$Petal.Length)
var(Data$Petal.Width)
#표준평균
mean(Data_standardized$Sepal.Length)
mean(Data_standardized$Sepal.Width)
mean(Data_standardized$Petal.Length)
mean(Data_standardized$Petal.Width)
#표준분산
var(Data_standardized$Sepal.Length)
var(Data_standardized$Sepal.Width)
var(Data_standardized$Petal.Length)
var(Data_standardized$Petal.Width)
# 각 변수의 표준화
Data_standardized <- scale(Data)
View(Data_standardized)
View(Data)
# 각 변수의 표준화
Data_standardized <- as.data.frame(scale(Data))
#표준평균
mean(Data_standardized$Sepal.Length)
mean(Data_standardized$Sepal.Width)
mean(Data_standardized$Petal.Length)
mean(Data_standardized$Petal.Width)
#표준분산
var(Data_standardized$Sepal.Length)
var(Data_standardized$Sepal.Width)
var(Data_standardized$Petal.Length)
var(Data_standardized$Petal.Width)
# 피어슨 상관계수 계산
correlation_matrix <- cor(Data_standardized, method = "pearson")
# 결과 출력
correlation_matrix
options(width=100)
longley
str(longley)
pairs(longley, main = "자료?? : longley")
pairs(longley, main = "자료명 : longley")
pairs(longley, main = "자료명 : longley")
Cl <- cor(longley)
Cl
symnum(Cl) # highly correlated
i <- lower.tri(Cl)
cor(cbind(P = Cl[i], S = clS[i], K = clK[i]))
symnum(clS <- cor(longley, method = "spearman"))
cor(cbind(P = Cl[i], S = clS[i], K = clK[i]))
symnum(clK <- cor(longley, method = "kendall"))
cor(cbind(P = Cl[i], S = clS[i], K = clK[i]))
# 패키지 "corrgram"?냐?
library(corrgram)
corrgram(cor(longley), main = "상관계수의 시각화", type="corr",cor.method = "pearson", upper.panel=panel.conf)
# 패키지 "corrgram"?냐?
library(corrgram)
# 패키지 "corrgram"?냐?
install.packages("corrgram")
library(corrgram)
corrgram(cor(longley), main = "상관계수의 시각화", type="corr",cor.method = "pearson", upper.panel=panel.conf)
options(encoding = "UTF-8")
version
source("file:///C:/code_statistics/Report_Does Television.R", encoding = "EUC-KR")
R.version
######################
#모분산의 추정 및 검정
install.packages("TeachingDemos")
library(TeachingDemos)
x <- rnorm(20, mean = 15, sd = 7)
x
sigma.test(x, sigma = 6)
sigma.test(x, sigmasq = 36)
sigma.test(x, sigma = 6, alternative = "greater")
X=c(1:10)
X
y=c(7:20)
y
t.test(x, y )
t.test(x,y, var.equal=TRUE)
##################################
#모분산의 차이에 대한 추정 및 검정
x <- rnorm(25, mean = 15, sd = 9)
y <- rnorm(20, mean = 10, sd = 7)
length(x);  mean(x);  var(x)
length(y);  mean(y);  var(y)
var.test(x, y)          # Do x and y have the same variance?
var.test(x, y, alternative = c("greater"))
setwd("C:/Users/ksn71/OneDrive/바탕 화면/git/statistics/2회_상관분석")
load("C:/Users/ksn71/OneDrive/바탕 화면/git/statistics/2회_상관분석/2상관분석.R")
